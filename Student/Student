/* Write three classes: Student, Course and School. Students should have name and unique number (inside the entire School). Name can not be empty and the unique number is between 10000 and 99999. Each course contains a set of students. Students in a course should be less than 30 and can join and leave courses.
Write VSTT tests for these two classes
Use 2 class library projects in Visual Studio: School.csproj and TestSchool.csproj
Execute the tests using Visual Studio and check the code coverage. Ensure it is at least 90%.
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace School
{
    public class Student
    {
        private string name;
        private uint uniqueNumber;

        public Student(string name, uint uniqueNumber)
        {
            this.Name = name;
            this.UniqueNumber = uniqueNumber;
        }

        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if (string.IsNullOrEmpty(value))
                {
                    throw new ArgumentNullException("The name can't be null or empty");
                }

                this.name = value;
            }
        }

        public uint UniqueNumber
        {
            get
            {
                return this.uniqueNumber;
            }
            set
            {
                if (10000 > value || value > 99999)
                {
                    throw new ArgumentOutOfRangeException("The unique number of the student should be between 10000 and 99999");
                }

                this.uniqueNumber = value;
            }
        }

        public static void Main()
        {
        }
    }
}
